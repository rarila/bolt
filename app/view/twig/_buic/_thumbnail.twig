{##
 # Renders a image thumbnail.
 #
 # Options:
 #    vmode     string     'collapse'   Vertical size behavior: 'collapse', 'center' or 'fixed'
 #
 # @param string  path
 # @param integer width
 # @param integer height
 # @param array   opt Options defining the component
 #}
{% macro buic_thumbnail(path, width, height, opt) %}
    {% if path is not empty %}
        {% set conf = {
            'vmode':       opt.vmode|default('') in ['collapse', 'center', 'fixed'] ? opt.vmode : 'collapse',
        } %}

        {% set info = imageinfo(path) %}
        {% set img_width = info.dimensions.width %}
        {% set img_height = info.dimensions.height %}
        {% set filename = path|preg_replace('%^.*/%') %}
        {% set directory = path|preg_replace('%/*[^/]*$%') ~ '/' %}

        {% set thumb_small = path|thumbnail(width, height, 'r') %}
        {% set thumb_large = path|thumbnail(1000, 800, 'r') %}

        {% set info_text = [
            info.type,
            img_width ~ ' × ' ~ img_height,
            info.channels ~ ' × ' ~ info.bits ~ ' bits',
        ] %}

        {% set class = 'buic-thumbnail info-pop magnific' ~
            (conf.vmode == 'center' ? ' vcenter' : '') ~
            (img_height / img_width < 60 / 80 ? ' wide' : '')
        %}

        {% set attr = {
            container: {
                'class':         class,
                'data-content':  info_text|join('<br>'),
                'data-html':     true,
                'data-title':    directory|e ~ '<br><b>' ~ filename|e ~ '</b>',
                'href':          thumb_large,
                'style':         'width:' ~ width ~ 'px;' ~ (conf.vmode != 'collapse' ? 'height:' ~ height ~ 'px;' : ''),
            },
            image: {
                'alt':           __('Thumbnail'),
                'src':           thumb_small,
            },
        } %}

        <a{{ hattr(attr.container)}}><img{{ hattr(attr.image)}}></a>
    {% endif %}
{% endmacro %}
